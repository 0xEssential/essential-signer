/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EssentialPlaySession,
  EssentialPlaySessionInterface,
} from "../../../contracts/fwd/EssentialPlaySession";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "authorized",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "Session",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authorized",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "createSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authorized",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "createSignedSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authorizer",
        type: "address",
      },
    ],
    name: "getSession",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "authorized",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
        ],
        internalType: "struct IForwardRequest.PlaySession",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "invalidateSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissionlessSessions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    name: "setTrustedForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "verifyAuthorization",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cba380380610cba8339818101604052810190610032919061011e565b8033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061014b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100eb826100c0565b9050919050565b6100fb816100e0565b811461010657600080fd5b50565b600081519050610118816100f2565b92915050565b600060208284031215610134576101336100bb565b5b600061014284828501610109565b91505092915050565b610b608061015a6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638f8bc9c7116100665780638f8bc9c7146101325780639dd24ca614610150578063be0fb87e14610180578063da7422281461018a578063ffb703ee146101a657610093565b8063248d0ad114610098578063572b6c05146100b45780638c8e13b9146100e45780638da5cb5b14610114575b600080fd5b6100b260048036038101906100ad91906107d9565b6101c2565b005b6100ce60048036038101906100c99190610819565b610220565b6040516100db9190610861565b60405180910390f35b6100fe60048036038101906100f99190610819565b610279565b60405161010b91906108c9565b60405180910390f35b61011c610332565b60405161012991906108f3565b60405180910390f35b61013a610358565b6040516101479190610861565b60405180910390f35b61016a6004803603810190610165919061090e565b61036b565b6040516101779190610861565b60405180910390f35b610188610454565b005b6101a4600480360381019061019f9190610819565b6104cb565b005b6101c060048036038101906101bb91906107d9565b61059e565b005b6101cb33610220565b61020a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610201906109ab565b60405180910390fd5b61021c82826102176105ad565b6105df565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b610281610710565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900460ff1681565b60008173ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561044c575042600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015410155b905092915050565b3073ffffffffffffffffffffffffffffffffffffffff1663ffb703ee6104786105ad565b60006040518363ffffffff1660e01b8152600401610497929190610a10565b600060405180830381600087803b1580156104b157600080fd5b505af11580156104c5573d6000803e3d6000fd5b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055290610a85565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6105a98282326105df565b5050565b60006105b833610220565b156105cc57601436033560601c90506105db565b6105d4610708565b90506105dc565b5b90565b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183426106129190610ad4565b815250600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f1170e4b3e143a792ce7a7af268ecfe7d7b0574438d8040eb89c2bf5b7e6e15d860405160405180910390a4505050565b600033905090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077082610745565b9050919050565b61078081610765565b811461078b57600080fd5b50565b60008135905061079d81610777565b92915050565b6000819050919050565b6107b6816107a3565b81146107c157600080fd5b50565b6000813590506107d3816107ad565b92915050565b600080604083850312156107f0576107ef610740565b5b60006107fe8582860161078e565b925050602061080f858286016107c4565b9150509250929050565b60006020828403121561082f5761082e610740565b5b600061083d8482850161078e565b91505092915050565b60008115159050919050565b61085b81610846565b82525050565b60006020820190506108766000830184610852565b92915050565b61088581610765565b82525050565b610894816107a3565b82525050565b6040820160008201516108b0600085018261087c565b5060208201516108c3602085018261088b565b50505050565b60006040820190506108de600083018461089a565b92915050565b6108ed81610765565b82525050565b600060208201905061090860008301846108e4565b92915050565b6000806040838503121561092557610924610740565b5b60006109338582860161078e565b92505060206109448582860161078e565b9150509250929050565b600082825260208201905092915050565b7f436f756e7465723a343239000000000000000000000000000000000000000000600082015250565b6000610995600b8361094e565b91506109a08261095f565b602082019050919050565b600060208201905081810360008301526109c481610988565b9050919050565b6000819050919050565b6000819050919050565b60006109fa6109f56109f0846109cb565b6109d5565b6107a3565b9050919050565b610a0a816109df565b82525050565b6000604082019050610a2560008301856108e4565b610a326020830184610a01565b9392505050565b7f3430330000000000000000000000000000000000000000000000000000000000600082015250565b6000610a6f60038361094e565b9150610a7a82610a39565b602082019050919050565b60006020820190508181036000830152610a9e81610a62565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610adf826107a3565b9150610aea836107a3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b1f57610b1e610aa5565b5b82820190509291505056fea264697066735822122036c2e07e1e195f0e41155bb3ccf02272470b313c184588e2e24a51a9d54564f964736f6c63430008090033";

type EssentialPlaySessionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EssentialPlaySessionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EssentialPlaySession__factory extends ContractFactory {
  constructor(...args: EssentialPlaySessionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EssentialPlaySession> {
    return super.deploy(
      trustedForwarder,
      overrides || {}
    ) as Promise<EssentialPlaySession>;
  }
  override getDeployTransaction(
    trustedForwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }
  override attach(address: string): EssentialPlaySession {
    return super.attach(address) as EssentialPlaySession;
  }
  override connect(signer: Signer): EssentialPlaySession__factory {
    return super.connect(signer) as EssentialPlaySession__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EssentialPlaySessionInterface {
    return new utils.Interface(_abi) as EssentialPlaySessionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EssentialPlaySession {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EssentialPlaySession;
  }
}

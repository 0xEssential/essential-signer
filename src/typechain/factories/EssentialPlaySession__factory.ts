/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EssentialPlaySession,
  EssentialPlaySessionInterface,
} from "../EssentialPlaySession";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "authorized",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "Session",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authorized",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "createSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authorized",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "createSignedSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authorizer",
        type: "address",
      },
    ],
    name: "getSession",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "authorized",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
        ],
        internalType: "struct IForwardRequest.PlaySession",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "invalidateSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissionlessSessions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    name: "setTrustedForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "authorizer",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nftTokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IForwardRequest.ERC721ForwardRequest",
        name: "req",
        type: "tuple",
      },
    ],
    name: "verifyAuthorization",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161087d38038061087d83398101604081905261002f91610062565b600180546001600160a01b03199081163317909155600080546001600160a01b0390931692909116919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b6107dc806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638f8bc9c711610076578063cd502eb71161005b578063cd502eb7146101af578063da742228146101c2578063ffb703ee146101d557600080fd5b80638f8bc9c71461019a578063be0fb87e146101a757600080fd5b8063248d0ad1146100a8578063572b6c05146100bd5780638c8e13b9146100f45780638da5cb5b1461016f575b600080fd5b6100bb6100b6366004610521565b6101e8565b005b6100df6100cb36600461054b565b6000546001600160a01b0391821691161490565b60405190151581526020015b60405180910390f35b61014b61010236600461054b565b604080518082018252600080825260209182018190526001600160a01b039384168152600282528290208251808401909352805490931682526001909201549181019190915290565b6040805182516001600160a01b0316815260209283015192810192909252016100eb565b600154610182906001600160a01b031681565b6040516001600160a01b0390911681526020016100eb565b6003546100df9060ff1681565b6100bb610277565b6100df6101bd366004610671565b6102ff565b6100bb6101d036600461054b565b61035a565b6100bb6101e3366004610521565b610408565b6000546001600160a01b03163314610261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f436f756e7465723a34323900000000000000000000000000000000000000000060448201526064015b60405180910390fd5b610273828261026e610413565b610457565b5050565b3063ffb703ee610285610413565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015260006024820152604401600060405180830381600087803b1580156102e557600080fd5b505af11580156102f9573d6000803e3d6000fd5b50505050565b80516020808301516001600160a01b0390811660009081526002909252604082205491928116911614801561035457506020808301516001600160a01b03166000908152600290915260409020600101544211155b92915050565b6001546001600160a01b031633146103ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f34303300000000000000000000000000000000000000000000000000000000006044820152606401610258565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b610273828232610457565b600080546001600160a01b031633141561045257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b6040518060400160405280846001600160a01b03168152602001834261047d9190610767565b90526001600160a01b038281166000818152600260209081526040808320865181547fffffffffffffffffffffffff000000000000000000000000000000000000000016908716178155959091015160019095019490945592518593928716927f1170e4b3e143a792ce7a7af268ecfe7d7b0574438d8040eb89c2bf5b7e6e15d891a4505050565b80356001600160a01b038116811461051c57600080fd5b919050565b6000806040838503121561053457600080fd5b61053d83610505565b946020939093013593505050565b60006020828403121561055d57600080fd5b61056682610505565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156105c0576105c061056d565b60405290565b600082601f8301126105d757600080fd5b813567ffffffffffffffff808211156105f2576105f261056d565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156106385761063861056d565b8160405283815286602085880101111561065157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561068357600080fd5b813567ffffffffffffffff8082111561069b57600080fd5b9083019061016082860312156106b057600080fd5b6106b861059c565b6106c183610505565b81526106cf60208401610505565b60208201526106e060408401610505565b60408201526106f160608401610505565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100808401358183015250610120808401358183015250610140808401358381111561074a57600080fd5b610756888287016105c6565b918301919091525095945050505050565b600082198211156107a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea26469706673582212206feb36d1e5deded317cf9bbc6da7fda25859e6476224393ca425c10dff16214064736f6c63430008090033";

type EssentialPlaySessionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EssentialPlaySessionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EssentialPlaySession__factory extends ContractFactory {
  constructor(...args: EssentialPlaySessionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EssentialPlaySession";
  }

  deploy(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EssentialPlaySession> {
    return super.deploy(
      trustedForwarder,
      overrides || {}
    ) as Promise<EssentialPlaySession>;
  }
  getDeployTransaction(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }
  attach(address: string): EssentialPlaySession {
    return super.attach(address) as EssentialPlaySession;
  }
  connect(signer: Signer): EssentialPlaySession__factory {
    return super.connect(signer) as EssentialPlaySession__factory;
  }
  static readonly contractName: "EssentialPlaySession";
  public readonly contractName: "EssentialPlaySession";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EssentialPlaySessionInterface {
    return new utils.Interface(_abi) as EssentialPlaySessionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EssentialPlaySession {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EssentialPlaySession;
  }
}

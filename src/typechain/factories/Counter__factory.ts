/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "counter",
        type: "address",
      },
    ],
    name: "Counted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "collectionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    name: "setTrustedForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161054638038061054683398101604081905261002f91610062565b600180546001600160a01b03199081163317909155600080546001600160a01b0390931692909116919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b6104a5806100a16000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f0578063d09de08a1461011b578063d17744cd14610125578063da7422281461014557600080fd5b806305d85eda1461008257806334eafb11146100b5578063572b6c05146100be575b600080fd5b6100a261009036600461043f565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b6100a260025481565b6100e06100cc36600461043f565b6000546001600160a01b0391821691161490565b60405190151581526020016100ac565b600154610103906001600160a01b031681565b6040516001600160a01b0390911681526020016100ac565b610123610158565b005b6100a261013336600461043f565b60036020526000908152604090205481565b61012361015336600461043f565b610306565b6000546001600160a01b031633146101b75760405162461bcd60e51b815260206004820152600b60248201527f436f756e7465723a34323900000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60006101c161039a565b905060006101cd6103fb565b82516001600160a01b03908116600090815260056020908152604080832082880151845290915290205491925016156102485760405162461bcd60e51b815260206004820152601360248201527f4e465420616c726561647920636f756e7465640000000000000000000000000060448201526064016101ae565b81516001600160a01b0390811660009081526005602090815260408083208287018051855290835281842080547fffffffffffffffffffffffff00000000000000000000000000000000000000001687871690811790915560028054600190810190915581865260048552838620805482019055885187168652600390945282852080549094019093555186519151929490939116917fe39cf6ce097c10dae6d67cc8b50f2e294be57dc01c496713b260b16300fbe4249190a45050565b6001546001600160a01b031633146103605760405162461bcd60e51b815260206004820152600360248201527f343033000000000000000000000000000000000000000000000000000000000060448201526064016101ae565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60408051808201909152600080825260208201526000805481906001600160a01b03163314156103d657602836033560601c9050604836033591505b6040518060400160405280826001600160a01b03168152602001838152509250505090565b600080546001600160a01b031633141561043a57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60006020828403121561045157600080fd5b81356001600160a01b038116811461046857600080fd5b939250505056fea26469706673582212207562c841e41afbd11c7409554999abf5430af98acd49262a64d4f33cf44f1b6c64736f6c63430008090033";

type CounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Counter__factory extends ContractFactory {
  constructor(...args: CounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Counter";
  }

  deploy(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(trustedForwarder, overrides || {}) as Promise<Counter>;
  }
  getDeployTransaction(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }
  static readonly contractName: "Counter";
  public readonly contractName: "Counter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
